name: DockerImage build
on:
  push :
    branches :
      - main
      - bre*
    tags:
      - v*
  pull_request :
    branches :
      - main
jobs:
  build_image:
    runs-on: ubuntu-22.04
    env:
      IMAGE_NAME: docker-ci-cd:1.0.0
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
      - uses: actions/setup-node@v4
        with:
          node-version: v20.11.0
      - name: Build Docker Image
        run: |
          docker image build --tag="${IMAGE_NAME}" ./
      - name: Launch npm run lint in a container / in a volume
        run: |
            docker container run --workdir="$(pwd)" --volume="$(pwd)":"$(pwd)"  "${IMAGE_NAME}" npm run lint
        continue-on-error: true
      - name: Run Docker container
        run: |
          docker run -d --name test-container ${IMAGE_NAME} node index.js
          sleep 5
          docker exec test-container curl http://localhost:3000
          docker stop test-container
      - name: Remove Docker Container
        run: |
          docker rm -f test-container
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push if on `main`
        uses: docker/build-push-action@v4
        if: github.ref == 'refs/heads/main'
        with:
          push: true
          context: ./
          tags: bertrand2808/docker-ci:latest
      - name: Deploy on tag creation
        if: github.event_name == 'create' && github.event.ref_type == 'tag'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker pull bertrand2808/docker-ci:latest
          docker tag bertrand2808/docker-ci:latest bertrand2808/docker-ci:${{ github.ref }}
          docker push bertrand2808/docker-ci:${{ github.ref }}
      - name: Create GitHub release notes
        id: create_release
        uses: actions/create-release@v1
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Automatic release notes for ${{ github.ref }}
          draft: false
          prerelease: false
